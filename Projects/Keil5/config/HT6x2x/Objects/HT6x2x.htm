<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\config\HT6x2x\Objects\HT6x2x.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\config\HT6x2x\Objects\HT6x2x.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Sat May 07 14:12:35 2022
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
DMA_IRQHandler &rArr; DMA_IRQProc &rArr; HT_DMA_ITFlagStatusGet
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">AES_IRQHandler</a> from ht6xxx_it.o(i.AES_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[25]">DMA_IRQHandler</a> from ht6xxx_it.o(i.DMA_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[8]">EXTI0_IRQHandler</a> from ht6xxx_it.o(i.EXTI0_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[9]">EXTI1_IRQHandler</a> from ht6xxx_it.o(i.EXTI1_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[a]">EXTI2_IRQHandler</a> from ht6xxx_it.o(i.EXTI2_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[b]">EXTI3_IRQHandler</a> from ht6xxx_it.o(i.EXTI3_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[c]">EXTI4_IRQHandler</a> from ht6xxx_it.o(i.EXTI4_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[d]">EXTI5_IRQHandler</a> from ht6xxx_it.o(i.EXTI5_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[e]">EXTI6_IRQHandler</a> from ht6xxx_it.o(i.EXTI6_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[22]">EXTI7_IRQHandler</a> from ht6xxx_it.o(i.EXTI7_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[23]">EXTI8_IRQHandler</a> from ht6xxx_it.o(i.EXTI8_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[24]">EXTI9_IRQHandler</a> from ht6xxx_it.o(i.EXTI9_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht6xxx_it.o(i.HardFault_Handler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1b]">I2C_IRQHandler</a> from ht6xxx_it.o(i.I2C_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ht6xxx_it.o(i.NMI_Handler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[6]">PMU_IRQHandler</a> from ht6xxx_it.o(i.PMU_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from ht6xxx_it.o(i.PendSV_Handler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from ht6xxx_it.o(i.RTC_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ht6x2x.o(.text) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from ht6xxx_it.o(i.SPI0_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from ht6xxx_it.o(i.SPI1_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from ht6xxx_it.o(i.SVC_Handler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1e]">SelfTestFreq_IRQHandler</a> from ht6xxx_it.o(i.SelfTestFreq_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from ht6xxx_it.o(i.SysTick_Handler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_ht6xxx.o(i.SystemInit) referenced from startup_ht6x2x.o(.text)
 <LI><a href="#[19]">TBS_IRQHandler</a> from ht6xxx_it.o(i.TBS_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[15]">TIMER_0_IRQHandler</a> from ht6xxx_it.o(i.TIMER_0_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[16]">TIMER_1_IRQHandler</a> from ht6xxx_it.o(i.TIMER_1_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[17]">TIMER_2_IRQHandler</a> from ht6xxx_it.o(i.TIMER_2_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[18]">TIMER_3_IRQHandler</a> from ht6xxx_it.o(i.TIMER_3_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[1f]">TIMER_4_IRQHandler</a> from ht6xxx_it.o(i.TIMER_4_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[20]">TIMER_5_IRQHandler</a> from ht6xxx_it.o(i.TIMER_5_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from ht6xxx_it.o(i.UART0_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from ht6xxx_it.o(i.UART1_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from ht6xxx_it.o(i.UART2_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from ht6xxx_it.o(i.UART3_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[13]">UART4_IRQHandler</a> from ht6xxx_it.o(i.UART4_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[14]">UART5_IRQHandler</a> from ht6xxx_it.o(i.UART5_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[21]">UART6_IRQHandler</a> from ht6xxx_it.o(i.UART6_IRQHandler) referenced from startup_ht6x2x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht6x2x.o(.text)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[46]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[47]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[48]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[49]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ht6x2x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>AES_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ht6xxx_it.o(i.AES_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AES_IRQHandler &rArr; HT_AES_GHASH_RAND_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_AES_GHASH_RAND_ITFlagStatusGet
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_AES_GHASH_RAND_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht6xxx_it.o(i.DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA_IRQHandler &rArr; DMA_IRQProc &rArr; HT_DMA_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI0_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI1_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI2_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI3_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI4_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI5_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI6_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI7_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI8_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ht6xxx_it.o(i.EXTI9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI9_IRQHandler &rArr; HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>HT_AES_GHASH_RAND_ClearITPendingBit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ht6xxx_aes&rand.o(i.HT_AES_GHASH_RAND_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_AES_GHASH_RAND_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_IRQHandler
</UL>

<P><STRONG><a name="[2c]"></a>HT_AES_GHASH_RAND_ITFlagStatusGet</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ht6xxx_aes&rand.o(i.HT_AES_GHASH_RAND_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_AES_GHASH_RAND_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>HT_CMU_StopFlagGet</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ht6xxx_cmu.o(i.HT_CMU_StopFlagGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_CMU_StopFlagGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[30]"></a>HT_DMA_ClearITPendingBit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ht6xxx_dma.o(i.HT_DMA_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_DMA_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQProc
</UL>

<P><STRONG><a name="[2f]"></a>HT_DMA_ITFlagStatusGet</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ht6xxx_dma.o(i.HT_DMA_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_DMA_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQProc
</UL>

<P><STRONG><a name="[34]"></a>HT_EXTIFall_ClearITPendingBit</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ht6xxx_exti.o(i.HT_EXTIFall_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_EXTIFall_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>HT_EXTIFall_ITFlagStatusGet</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, ht6xxx_exti.o(i.HT_EXTIFall_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_EXTIFall_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>HT_EXTIRise_ClearITPendingBit</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ht6xxx_exti.o(i.HT_EXTIRise_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_EXTIRise_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[31]"></a>HT_EXTIRise_ITFlagStatusGet</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, ht6xxx_exti.o(i.HT_EXTIRise_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_EXTIRise_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>HT_FreeDog</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht6xxx_wdt.o(i.HT_FreeDog))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>HT_I2C_IRQHandler_Default</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_iic.o(i.HT_I2C_IRQHandler_Default))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>HT_ISO7816_ClearITPendingBit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ht6xxx_uart&7816.o(i.HT_ISO7816_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_ISO7816_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>HT_ISO7816_ITFlagStatusGet</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ht6xxx_uart&7816.o(i.HT_ISO7816_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_ISO7816_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>HT_PMU_ClearITPendingBit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ht6xxx_pmu.o(i.HT_PMU_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_PMU_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>HT_PMU_ITFlagStatusGet</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ht6xxx_pmu.o(i.HT_PMU_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_PMU_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>HT_SPI_ClearITPendingBit</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ht6xxx_spi.o(i.HT_SPI_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_SPI_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>HT_SPI_ITFlagStatusGet</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ht6xxx_spi.o(i.HT_SPI_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_SPI_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>HT_TBS_ClearITPendingBit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ht6xxx_tbs.o(i.HT_TBS_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HT_TBS_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBS_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>HT_TBS_ITFlagStatusGet</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ht6xxx_tbs.o(i.HT_TBS_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_TBS_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBS_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>HT_TMR_ClearITPendingBit</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ht6xxx_timer.o(i.HT_TMR_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_TMR_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_5_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_4_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_2_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_1_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[40]"></a>HT_TMR_ITFlagStatusGet</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ht6xxx_timer.o(i.HT_TMR_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_5_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_4_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_2_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_1_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_0_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>HT_UART_ClearITPendingBit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ht6xxx_uart&7816.o(i.HT_UART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_UART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht6xxx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht6xxx_it.o(i.I2C_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_I2C_IRQHandler_Default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SelfTestFreq_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.SelfTestFreq_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht6xxx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_ht6xxx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[43]"></a>HT_UART_ITFlagStatusGet</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ht6xxx_uart&7816.o(i.HT_UART_ITFlagStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ht6xxx_it.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NMI_Handler &rArr; HT_CMU_StopFlagGet
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_StopFlagGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PMU_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, ht6xxx_it.o(i.PMU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PMU_IRQHandler &rArr; HT_PMU_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ITFlagStatusGet
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht6xxx_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI0_IRQHandler &rArr; HT_SPI_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ITFlagStatusGet
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI1_IRQHandler &rArr; HT_SPI_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ITFlagStatusGet
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TBS_IRQHandler</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TBS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TBS_IRQHandler &rArr; HT_TBS_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ITFlagStatusGet
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER_0_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_0_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER_1_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_1_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER_2_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_2_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER_3_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_3_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER_4_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_4_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER_5_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ht6xxx_it.o(i.TIMER_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_5_IRQHandler &rArr; HT_TMR_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART0_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART1_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART2_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART3_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ITFlagStatusGet
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART4_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART4_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ITFlagStatusGet
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART5_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART5_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART6_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht6xxx_it.o(i.UART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART6_IRQHandler &rArr; HT_UART_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht6x2x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[35]"></a>assert_failed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ITFlagStatusGet
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIRise_ClearITPendingBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ITFlagStatusGet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_EXTIFall_ClearITPendingBit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_DMA_ITFlagStatusGet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_DMA_ClearITPendingBit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_CMU_StopFlagGet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_AES_GHASH_RAND_ITFlagStatusGet
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_AES_GHASH_RAND_ClearITPendingBit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ITFlagStatusGet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_UART_ClearITPendingBit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ITFlagStatusGet
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_ISO7816_ClearITPendingBit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ITFlagStatusGet
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TMR_ClearITPendingBit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ITFlagStatusGet
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_TBS_ClearITPendingBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ITFlagStatusGet
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_SPI_ClearITPendingBit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ITFlagStatusGet
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_PMU_ClearITPendingBit
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_FreeDog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2e]"></a>DMA_IRQProc</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, ht6xxx_it.o(i.DMA_IRQProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA_IRQProc &rArr; HT_DMA_ITFlagStatusGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_DMA_ITFlagStatusGet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT_DMA_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
